# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  private_lane :apple_auth do |options|
    ensure_env_vars(
        env_vars: ["APP_STORE_CONNECT_API_KEY_ID", "APP_STORE_CONNECT_API_ISSUER_ID", "APP_STORE_CONNECT_API_KEY_CONTENT"]
    )

    app_store_connect_api_key(
        key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
        issuer_id: ENV['APP_STORE_CONNECT_API_ISSUER_ID'],
        key_content: Base64.decode64(ENV['APP_STORE_CONNECT_API_KEY_CONTENT'])
    )
  end

  desc "Create a release build"
  lane :build do |options|
    setup_circle_ci
    version_code = options[:version_code]
    version_name = options[:version_name]

    if [version_code, version_name].include?(nil)
        raise "'nil' passed as parameter! Aborting..."
    end

    apple_auth

    ENV["EXTRA_PACKAGER_ARGS"] = "--sourcemap-output ios/output/app-release.ios.bundle.map"

    match(type: "development", app_identifier: "app.lunes", readonly: true, )
    match(type: "appstore", app_identifier: "app.lunes", readonly: true)

    increment_build_number(build_number: version_code)
    increment_version_number(version_number: version_name)

    scheme_name = "Lunes"

    build_app(
        workspace: "Lunes.xcworkspace",
        scheme: "Lunes",
        output_name: "app-release.ipa",
        export_method: "app-store",
        include_bitcode: false # Uploading to BrowserStack does not work when including Bitcode
    )
    end

    desc "Upload iOS App to BrowserStack"
    lane :upload_to_browserstack do |options|
        file_path = options[:file_path]

        if [file_path].include?(nil)
            raise "'nil' passed as parameter! Aborting..."
        end

        ensure_env_vars(
            env_vars: ["BROWSERSTACK_USERNAME", "BROWSERSTACK_ACCESS_KEY"]
        )

        upload_to_browserstack_app_live(
            browserstack_username: ENV["BROWSERSTACK_USERNAME"],
            browserstack_access_key: ENV["BROWSERSTACK_ACCESS_KEY"],
            file_path: "#{ENV['HOME']}/#{file_path}"
        )
    end


  # The following parameters have to be passed:
  # version_name: The version name of the app
  # ipa_path: The path of the ipa to upload (relative to home dir)
  desc "Deliver the app to App Store Connect. The app is submitted for review and released automatically."
  lane :upload_to_appstoreconnect do |options|
    apple_auth()

    version_name = options[:version_name]
    ipa_path = options[:ipa_path]

    if [version_name, ipa_path].include?(nil)
      raise "'nil' passed as parameter! Aborting..."
    end

    puts("delivering v#{version_name}")

    # https://docs.fastlane.tools/actions/deliver/
    deliver(
        ipa: "#{ENV['HOME']}/#{ipa_path}",
        app_version: version_name,
        submit_for_review: true,
        automatic_release: true,
        force: true,
        skip_screenshots: true,
        skip_metadata: false,
        overwrite_screenshots: true,
        skip_app_version_update: false,
        metadata_path: "./ios/fastlane/lunes/metadata",
        screenshots_path: "./ios/fastlane/lunes/screenshots",
        precheck_include_in_app_purchases: false, # We do not have inapp purchases
        submission_information: { add_id_info_uses_idfa: false }  # https://firebase.google.com/docs/analytics/configure-data-collection?platform=ios
                                                                  # https://support.google.com/firebase/answer/6318039?hl=en
    )
  end


  desc "Deliver iOS App to TestFlight for testers"
  lane :upload_to_test_flight do |options|
    apple_auth()
    ipa_path = options[:ipa_path]

    if [ipa_path].include?(nil)
      raise "'nil' passed as parameter! Aborting..."
    end

    # https://docs.fastlane.tools/actions/upload_to_testflight/
    upload_to_testflight(
        skip_waiting_for_build_processing: true,
        apple_id: '1562834995',
        ipa: "#{ENV['HOME']}/#{ipa_path}",
        distribute_external: false
    )
  end

    # The following parameters have to be passed:
    # version_name: The version name of the release notes to prepare
    desc "Prepare release notes"
    lane :prepare_release_notes do |options|
      version_name = options[:version_name]

      if [version_name].include?(nil)
        raise "'nil' passed as parameter! Aborting..."
      end

      `../../tools/parse-release-notes parse --ios --destination ../ios/fastlane/lunes/metadata/de-DE/release_notes.txt --language de --source ../../release-notes/#{version_name} --production`
      `../../tools/parse-release-notes parse --ios --destination ../ios/fastlane/lunes/metadata/en-US/release_notes.txt --language en --source ../../release-notes/#{version_name} --production`
    end

end
